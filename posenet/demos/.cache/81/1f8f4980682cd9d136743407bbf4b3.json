{"id":"uje2","dependencies":[{"name":"/Users/aradhya.gupta/Documents/HackDay/posenet/demos/package.json","includedInParent":true,"mtime":1552005523595},{"name":"/Users/aradhya.gupta/Documents/HackDay/posenet/demos/.babelrc","includedInParent":true,"mtime":1551891347000},{"name":"/Users/aradhya.gupta/Documents/HackDay/posenet/demos/node_modules/ws/package.json","includedInParent":true,"mtime":1552005719880},{"name":"util","loc":{"line":7,"column":19},"parent":"/Users/aradhya.gupta/Documents/HackDay/posenet/demos/node_modules/ws/lib/Receiver.js","resolved":"/Users/aradhya.gupta/Documents/HackDay/posenet/demos/node_modules/util/util.js"},{"name":"./Validation","loc":{"line":8,"column":26},"parent":"/Users/aradhya.gupta/Documents/HackDay/posenet/demos/node_modules/ws/lib/Receiver.js","resolved":"/Users/aradhya.gupta/Documents/HackDay/posenet/demos/node_modules/ws/lib/Validation.js"},{"name":"./ErrorCodes","loc":{"line":9,"column":25},"parent":"/Users/aradhya.gupta/Documents/HackDay/posenet/demos/node_modules/ws/lib/Receiver.js","resolved":"/Users/aradhya.gupta/Documents/HackDay/posenet/demos/node_modules/ws/lib/ErrorCodes.js"},{"name":"./BufferPool","loc":{"line":10,"column":25},"parent":"/Users/aradhya.gupta/Documents/HackDay/posenet/demos/node_modules/ws/lib/Receiver.js","resolved":"/Users/aradhya.gupta/Documents/HackDay/posenet/demos/node_modules/ws/lib/BufferPool.js"},{"name":"./BufferUtil","loc":{"line":11,"column":25},"parent":"/Users/aradhya.gupta/Documents/HackDay/posenet/demos/node_modules/ws/lib/Receiver.js","resolved":"/Users/aradhya.gupta/Documents/HackDay/posenet/demos/node_modules/ws/lib/BufferUtil.js"},{"name":"./PerMessageDeflate","loc":{"line":12,"column":32},"parent":"/Users/aradhya.gupta/Documents/HackDay/posenet/demos/node_modules/ws/lib/Receiver.js","resolved":"/Users/aradhya.gupta/Documents/HackDay/posenet/demos/node_modules/ws/lib/PerMessageDeflate.js"},{"name":"buffer","parent":"/Users/aradhya.gupta/Documents/HackDay/posenet/demos/node_modules/ws/lib/Receiver.js","resolved":"/Users/aradhya.gupta/Documents/HackDay/posenet/demos/node_modules/buffer/index.js"}],"generated":{"js":"var Buffer = require(\"buffer\").Buffer;\n/*!\n * ws: a node.js websocket client\n * Copyright(c) 2011 Einar Otto Stangvik <einaros@gmail.com>\n * MIT Licensed\n */\n\nvar util = require('util')\n  , isValidUTF8 = require('./Validation')\n  , ErrorCodes = require('./ErrorCodes')\n  , BufferPool = require('./BufferPool')\n  , bufferUtil = require('./BufferUtil')\n  , PerMessageDeflate = require('./PerMessageDeflate');\n\n/**\n * HyBi Receiver implementation\n */\n\nfunction Receiver (extensions,maxPayload) {\n  if (this instanceof Receiver === false) {\n    throw new TypeError(\"Classes can't be function-called\");\n  }\n  if(typeof extensions==='number'){\n    maxPayload=extensions;\n    extensions={};\n  }\n\n\n  // memory pool for fragmented messages\n  var fragmentedPoolPrevUsed = -1;\n  this.fragmentedBufferPool = new BufferPool(1024, function(db, length) {\n    return db.used + length;\n  }, function(db) {\n    return fragmentedPoolPrevUsed = fragmentedPoolPrevUsed >= 0 ?\n      Math.ceil((fragmentedPoolPrevUsed + db.used) / 2) :\n      db.used;\n  });\n\n  // memory pool for unfragmented messages\n  var unfragmentedPoolPrevUsed = -1;\n  this.unfragmentedBufferPool = new BufferPool(1024, function(db, length) {\n    return db.used + length;\n  }, function(db) {\n    return unfragmentedPoolPrevUsed = unfragmentedPoolPrevUsed >= 0 ?\n      Math.ceil((unfragmentedPoolPrevUsed + db.used) / 2) :\n      db.used;\n  });\n  this.extensions = extensions || {};\n  this.maxPayload = maxPayload || 0;\n  this.currentPayloadLength = 0;\n  this.state = {\n    activeFragmentedOperation: null,\n    lastFragment: false,\n    masked: false,\n    opcode: 0,\n    fragmentedOperation: false\n  };\n  this.overflow = [];\n  this.headerBuffer = new Buffer(10);\n  this.expectOffset = 0;\n  this.expectBuffer = null;\n  this.expectHandler = null;\n  this.currentMessage = [];\n  this.currentMessageLength = 0;\n  this.messageHandlers = [];\n  this.expectHeader(2, this.processPacket);\n  this.dead = false;\n  this.processing = false;\n\n  this.onerror = function() {};\n  this.ontext = function() {};\n  this.onbinary = function() {};\n  this.onclose = function() {};\n  this.onping = function() {};\n  this.onpong = function() {};\n}\n\nmodule.exports = Receiver;\n\n/**\n * Add new data to the parser.\n *\n * @api public\n */\n\nReceiver.prototype.add = function(data) {\n  if (this.dead) return;\n  var dataLength = data.length;\n  if (dataLength == 0) return;\n  if (this.expectBuffer == null) {\n    this.overflow.push(data);\n    return;\n  }\n  var toRead = Math.min(dataLength, this.expectBuffer.length - this.expectOffset);\n  fastCopy(toRead, data, this.expectBuffer, this.expectOffset);\n  this.expectOffset += toRead;\n  if (toRead < dataLength) {\n    this.overflow.push(data.slice(toRead));\n  }\n  while (this.expectBuffer && this.expectOffset == this.expectBuffer.length) {\n    var bufferForHandler = this.expectBuffer;\n    this.expectBuffer = null;\n    this.expectOffset = 0;\n    this.expectHandler.call(this, bufferForHandler);\n  }\n};\n\n/**\n * Releases all resources used by the receiver.\n *\n * @api public\n */\n\nReceiver.prototype.cleanup = function() {\n  this.dead = true;\n  this.overflow = null;\n  this.headerBuffer = null;\n  this.expectBuffer = null;\n  this.expectHandler = null;\n  this.unfragmentedBufferPool = null;\n  this.fragmentedBufferPool = null;\n  this.state = null;\n  this.currentMessage = null;\n  this.onerror = null;\n  this.ontext = null;\n  this.onbinary = null;\n  this.onclose = null;\n  this.onping = null;\n  this.onpong = null;\n};\n\n/**\n * Waits for a certain amount of header bytes to be available, then fires a callback.\n *\n * @api private\n */\n\nReceiver.prototype.expectHeader = function(length, handler) {\n  if (length == 0) {\n    handler(null);\n    return;\n  }\n  this.expectBuffer = this.headerBuffer.slice(this.expectOffset, this.expectOffset + length);\n  this.expectHandler = handler;\n  var toRead = length;\n  while (toRead > 0 && this.overflow.length > 0) {\n    var fromOverflow = this.overflow.pop();\n    if (toRead < fromOverflow.length) this.overflow.push(fromOverflow.slice(toRead));\n    var read = Math.min(fromOverflow.length, toRead);\n    fastCopy(read, fromOverflow, this.expectBuffer, this.expectOffset);\n    this.expectOffset += read;\n    toRead -= read;\n  }\n};\n\n/**\n * Waits for a certain amount of data bytes to be available, then fires a callback.\n *\n * @api private\n */\n\nReceiver.prototype.expectData = function(length, handler) {\n  if (length == 0) {\n    handler(null);\n    return;\n  }\n  this.expectBuffer = this.allocateFromPool(length, this.state.fragmentedOperation);\n  this.expectHandler = handler;\n  var toRead = length;\n  while (toRead > 0 && this.overflow.length > 0) {\n    var fromOverflow = this.overflow.pop();\n    if (toRead < fromOverflow.length) this.overflow.push(fromOverflow.slice(toRead));\n    var read = Math.min(fromOverflow.length, toRead);\n    fastCopy(read, fromOverflow, this.expectBuffer, this.expectOffset);\n    this.expectOffset += read;\n    toRead -= read;\n  }\n};\n\n/**\n * Allocates memory from the buffer pool.\n *\n * @api private\n */\n\nReceiver.prototype.allocateFromPool = function(length, isFragmented) {\n  return (isFragmented ? this.fragmentedBufferPool : this.unfragmentedBufferPool).get(length);\n};\n\n/**\n * Start processing a new packet.\n *\n * @api private\n */\n\nReceiver.prototype.processPacket = function (data) {\n  if (this.extensions[PerMessageDeflate.extensionName]) {\n    if ((data[0] & 0x30) != 0) {\n      this.error('reserved fields (2, 3) must be empty', 1002);\n      return;\n    }\n  } else {\n    if ((data[0] & 0x70) != 0) {\n      this.error('reserved fields must be empty', 1002);\n      return;\n    }\n  }\n  this.state.lastFragment = (data[0] & 0x80) == 0x80;\n  this.state.masked = (data[1] & 0x80) == 0x80;\n  var compressed = (data[0] & 0x40) == 0x40;\n  var opcode = data[0] & 0xf;\n  if (opcode === 0) {\n    if (compressed) {\n      this.error('continuation frame cannot have the Per-message Compressed bits', 1002);\n      return;\n    }\n    // continuation frame\n    this.state.fragmentedOperation = true;\n    this.state.opcode = this.state.activeFragmentedOperation;\n    if (!(this.state.opcode == 1 || this.state.opcode == 2)) {\n      this.error('continuation frame cannot follow current opcode', 1002);\n      return;\n    }\n  }\n  else {\n    if (opcode < 3 && this.state.activeFragmentedOperation != null) {\n      this.error('data frames after the initial data frame must have opcode 0', 1002);\n      return;\n    }\n    if (opcode >= 8 && compressed) {\n      this.error('control frames cannot have the Per-message Compressed bits', 1002);\n      return;\n    }\n    this.state.compressed = compressed;\n    this.state.opcode = opcode;\n    if (this.state.lastFragment === false) {\n      this.state.fragmentedOperation = true;\n      this.state.activeFragmentedOperation = opcode;\n    }\n    else this.state.fragmentedOperation = false;\n  }\n  var handler = opcodes[this.state.opcode];\n  if (typeof handler == 'undefined') this.error('no handler for opcode ' + this.state.opcode, 1002);\n  else {\n    handler.start.call(this, data);\n  }\n};\n\n/**\n * Endprocessing a packet.\n *\n * @api private\n */\n\nReceiver.prototype.endPacket = function() {\n  if (this.dead) return;\n  if (!this.state.fragmentedOperation) this.unfragmentedBufferPool.reset(true);\n  else if (this.state.lastFragment) this.fragmentedBufferPool.reset(true);\n  this.expectOffset = 0;\n  this.expectBuffer = null;\n  this.expectHandler = null;\n  if (this.state.lastFragment && this.state.opcode === this.state.activeFragmentedOperation) {\n    // end current fragmented operation\n    this.state.activeFragmentedOperation = null;\n  }\n  this.currentPayloadLength = 0;\n  this.state.lastFragment = false;\n  this.state.opcode = this.state.activeFragmentedOperation != null ? this.state.activeFragmentedOperation : 0;\n  this.state.masked = false;\n  this.expectHeader(2, this.processPacket);\n};\n\n/**\n * Reset the parser state.\n *\n * @api private\n */\n\nReceiver.prototype.reset = function() {\n  if (this.dead) return;\n  this.state = {\n    activeFragmentedOperation: null,\n    lastFragment: false,\n    masked: false,\n    opcode: 0,\n    fragmentedOperation: false\n  };\n  this.fragmentedBufferPool.reset(true);\n  this.unfragmentedBufferPool.reset(true);\n  this.expectOffset = 0;\n  this.expectBuffer = null;\n  this.expectHandler = null;\n  this.overflow = [];\n  this.currentMessage = [];\n  this.currentMessageLength = 0;\n  this.messageHandlers = [];\n  this.currentPayloadLength = 0;\n};\n\n/**\n * Unmask received data.\n *\n * @api private\n */\n\nReceiver.prototype.unmask = function (mask, buf, binary) {\n  if (mask != null && buf != null) bufferUtil.unmask(buf, mask);\n  if (binary) return buf;\n  return buf != null ? buf.toString('utf8') : '';\n};\n\n/**\n * Handles an error\n *\n * @api private\n */\n\nReceiver.prototype.error = function (reason, protocolErrorCode) {\n  if (this.dead) return;\n  this.reset();\n  if(typeof reason == 'string'){\n    this.onerror(new Error(reason), protocolErrorCode);\n  }\n  else if(reason.constructor == Error){\n    this.onerror(reason, protocolErrorCode);\n  }\n  else{\n    this.onerror(new Error(\"An error occured\"),protocolErrorCode);\n  }\n  return this;\n};\n\n/**\n * Execute message handler buffers\n *\n * @api private\n */\n\nReceiver.prototype.flush = function() {\n  if (this.processing || this.dead) return;\n\n  var handler = this.messageHandlers.shift();\n  if (!handler) return;\n\n  this.processing = true;\n  var self = this;\n\n  handler(function() {\n    self.processing = false;\n    self.flush();\n  });\n};\n\n/**\n * Apply extensions to message\n *\n * @api private\n */\n\nReceiver.prototype.applyExtensions = function(messageBuffer, fin, compressed, callback) {\n  var self = this;\n  if (compressed) {\n    this.extensions[PerMessageDeflate.extensionName].decompress(messageBuffer, fin, function(err, buffer) {\n      if (self.dead) return;\n      if (err) {\n        callback(new Error('invalid compressed data'));\n        return;\n      }\n      callback(null, buffer);\n    });\n  } else {\n    callback(null, messageBuffer);\n  }\n};\n\n/**\n* Checks payload size, disconnects socket when it exceeds maxPayload\n*\n* @api private\n*/\nReceiver.prototype.maxPayloadExceeded = function(length) {\n  if (this.maxPayload=== undefined || this.maxPayload === null || this.maxPayload < 1) {\n    return false;\n  }\n  var fullLength = this.currentPayloadLength + length;\n  if (fullLength < this.maxPayload) {\n    this.currentPayloadLength = fullLength;\n    return false;\n  }\n  this.error('payload cannot exceed ' + this.maxPayload + ' bytes', 1009);\n  this.messageBuffer=[];\n  this.cleanup();\n\n  return true;\n};\n\n/**\n * Buffer utilities\n */\n\nfunction readUInt16BE(start) {\n  return (this[start]<<8) +\n         this[start+1];\n}\n\nfunction readUInt32BE(start) {\n  return (this[start]<<24) +\n         (this[start+1]<<16) +\n         (this[start+2]<<8) +\n         this[start+3];\n}\n\nfunction fastCopy(length, srcBuffer, dstBuffer, dstOffset) {\n  switch (length) {\n    default: srcBuffer.copy(dstBuffer, dstOffset, 0, length); break;\n    case 16: dstBuffer[dstOffset+15] = srcBuffer[15];\n    case 15: dstBuffer[dstOffset+14] = srcBuffer[14];\n    case 14: dstBuffer[dstOffset+13] = srcBuffer[13];\n    case 13: dstBuffer[dstOffset+12] = srcBuffer[12];\n    case 12: dstBuffer[dstOffset+11] = srcBuffer[11];\n    case 11: dstBuffer[dstOffset+10] = srcBuffer[10];\n    case 10: dstBuffer[dstOffset+9] = srcBuffer[9];\n    case 9: dstBuffer[dstOffset+8] = srcBuffer[8];\n    case 8: dstBuffer[dstOffset+7] = srcBuffer[7];\n    case 7: dstBuffer[dstOffset+6] = srcBuffer[6];\n    case 6: dstBuffer[dstOffset+5] = srcBuffer[5];\n    case 5: dstBuffer[dstOffset+4] = srcBuffer[4];\n    case 4: dstBuffer[dstOffset+3] = srcBuffer[3];\n    case 3: dstBuffer[dstOffset+2] = srcBuffer[2];\n    case 2: dstBuffer[dstOffset+1] = srcBuffer[1];\n    case 1: dstBuffer[dstOffset] = srcBuffer[0];\n  }\n}\n\nfunction clone(obj) {\n  var cloned = {};\n  for (var k in obj) {\n    if (obj.hasOwnProperty(k)) {\n      cloned[k] = obj[k];\n    }\n  }\n  return cloned;\n}\n\n/**\n * Opcode handlers\n */\n\nvar opcodes = {\n  // text\n  '1': {\n    start: function(data) {\n      var self = this;\n      // decode length\n      var firstLength = data[1] & 0x7f;\n      if (firstLength < 126) {\n        if (self.maxPayloadExceeded(firstLength)){\n          self.error('Maximumpayload exceeded in compressed text message. Aborting...', 1009);\n          return;\n        }\n        opcodes['1'].getData.call(self, firstLength);\n      }\n      else if (firstLength == 126) {\n        self.expectHeader(2, function(data) {\n          var length = readUInt16BE.call(data, 0);\n          if (self.maxPayloadExceeded(length)){\n            self.error('Maximumpayload exceeded in compressed text message. Aborting...', 1009);\n            return;\n          }\n          opcodes['1'].getData.call(self, length);\n        });\n      }\n      else if (firstLength == 127) {\n        self.expectHeader(8, function(data) {\n          if (readUInt32BE.call(data, 0) != 0) {\n            self.error('packets with length spanning more than 32 bit is currently not supported', 1008);\n            return;\n          }\n          var length = readUInt32BE.call(data, 4);\n          if (self.maxPayloadExceeded(length)){\n            self.error('Maximumpayload exceeded in compressed text message. Aborting...', 1009);\n            return;\n          }\n          opcodes['1'].getData.call(self, readUInt32BE.call(data, 4));\n        });\n      }\n    },\n    getData: function(length) {\n      var self = this;\n      if (self.state.masked) {\n        self.expectHeader(4, function(data) {\n          var mask = data;\n          self.expectData(length, function(data) {\n            opcodes['1'].finish.call(self, mask, data);\n          });\n        });\n      }\n      else {\n        self.expectData(length, function(data) {\n          opcodes['1'].finish.call(self, null, data);\n        });\n      }\n    },\n    finish: function(mask, data) {\n      var self = this;\n      var packet = this.unmask(mask, data, true) || new Buffer(0);\n      var state = clone(this.state);\n      this.messageHandlers.push(function(callback) {\n        self.applyExtensions(packet, state.lastFragment, state.compressed, function(err, buffer) {\n          if (err) {\n            if(err.type===1009){\n                return self.error('Maximumpayload exceeded in compressed text message. Aborting...', 1009);\n            }\n            return self.error(err.message, 1007);\n          }\n          if (buffer != null) {\n            if( self.maxPayload==0 || (self.maxPayload > 0 && (self.currentMessageLength + buffer.length) < self.maxPayload) ){\n              self.currentMessage.push(buffer);\n            }\n            else{\n                self.currentMessage=null;\n                self.currentMessage = [];\n                self.currentMessageLength = 0;\n                self.error(new Error('Maximum payload exceeded. maxPayload: '+self.maxPayload), 1009);\n                return;\n            }\n            self.currentMessageLength += buffer.length;\n          }\n          if (state.lastFragment) {\n            var messageBuffer = Buffer.concat(self.currentMessage);\n            self.currentMessage = [];\n            self.currentMessageLength = 0;\n            if (!isValidUTF8(messageBuffer)) {\n              self.error('invalid utf8 sequence', 1007);\n              return;\n            }\n            self.ontext(messageBuffer.toString('utf8'), {masked: state.masked, buffer: messageBuffer});\n          }\n          callback();\n        });\n      });\n      this.flush();\n      this.endPacket();\n    }\n  },\n  // binary\n  '2': {\n    start: function(data) {\n      var self = this;\n      // decode length\n      var firstLength = data[1] & 0x7f;\n      if (firstLength < 126) {\n          if (self.maxPayloadExceeded(firstLength)){\n            self.error('Max payload exceeded in compressed text message. Aborting...', 1009);\n            return;\n          }\n        opcodes['2'].getData.call(self, firstLength);\n      }\n      else if (firstLength == 126) {\n        self.expectHeader(2, function(data) {\n          var length = readUInt16BE.call(data, 0);\n          if (self.maxPayloadExceeded(length)){\n            self.error('Max payload exceeded in compressed text message. Aborting...', 1009);\n            return;\n          }\n          opcodes['2'].getData.call(self, length);\n        });\n      }\n      else if (firstLength == 127) {\n        self.expectHeader(8, function(data) {\n          if (readUInt32BE.call(data, 0) != 0) {\n            self.error('packets with length spanning more than 32 bit is currently not supported', 1008);\n            return;\n          }\n          var length = readUInt32BE.call(data, 4, true);\n          if (self.maxPayloadExceeded(length)){\n            self.error('Max payload exceeded in compressed text message. Aborting...', 1009);\n            return;\n          }\n          opcodes['2'].getData.call(self, length);\n        });\n      }\n    },\n    getData: function(length) {\n      var self = this;\n      if (self.state.masked) {\n        self.expectHeader(4, function(data) {\n          var mask = data;\n          self.expectData(length, function(data) {\n            opcodes['2'].finish.call(self, mask, data);\n          });\n        });\n      }\n      else {\n        self.expectData(length, function(data) {\n          opcodes['2'].finish.call(self, null, data);\n        });\n      }\n    },\n    finish: function(mask, data) {\n      var self = this;\n      var packet = this.unmask(mask, data, true) || new Buffer(0);\n      var state = clone(this.state);\n      this.messageHandlers.push(function(callback) {\n        self.applyExtensions(packet, state.lastFragment, state.compressed, function(err, buffer) {\n          if (err) {\n            if(err.type===1009){\n                return self.error('Max payload exceeded in compressed binary message. Aborting...', 1009);\n            }\n            return self.error(err.message, 1007);\n          }\n          if (buffer != null) {\n            if( self.maxPayload==0 || (self.maxPayload > 0 && (self.currentMessageLength + buffer.length) < self.maxPayload) ){\n              self.currentMessage.push(buffer);\n            }\n            else{\n                self.currentMessage=null;\n                self.currentMessage = [];\n                self.currentMessageLength = 0;\n                self.error(new Error('Maximum payload exceeded'), 1009);\n                return;\n            }\n            self.currentMessageLength += buffer.length;\n          }\n          if (state.lastFragment) {\n            var messageBuffer = Buffer.concat(self.currentMessage);\n            self.currentMessage = [];\n            self.currentMessageLength = 0;\n            self.onbinary(messageBuffer, {masked: state.masked, buffer: messageBuffer});\n          }\n          callback();\n        });\n      });\n      this.flush();\n      this.endPacket();\n    }\n  },\n  // close\n  '8': {\n    start: function(data) {\n      var self = this;\n      if (self.state.lastFragment == false) {\n        self.error('fragmented close is not supported', 1002);\n        return;\n      }\n\n      // decode length\n      var firstLength = data[1] & 0x7f;\n      if (firstLength < 126) {\n        opcodes['8'].getData.call(self, firstLength);\n      }\n      else {\n        self.error('control frames cannot have more than 125 bytes of data', 1002);\n      }\n    },\n    getData: function(length) {\n      var self = this;\n      if (self.state.masked) {\n        self.expectHeader(4, function(data) {\n          var mask = data;\n          self.expectData(length, function(data) {\n            opcodes['8'].finish.call(self, mask, data);\n          });\n        });\n      }\n      else {\n        self.expectData(length, function(data) {\n          opcodes['8'].finish.call(self, null, data);\n        });\n      }\n    },\n    finish: function(mask, data) {\n      var self = this;\n      data = self.unmask(mask, data, true);\n\n      var state = clone(this.state);\n      this.messageHandlers.push(function() {\n        if (data && data.length == 1) {\n          self.error('close packets with data must be at least two bytes long', 1002);\n          return;\n        }\n        var code = data && data.length > 1 ? readUInt16BE.call(data, 0) : 1000;\n        if (!ErrorCodes.isValidErrorCode(code)) {\n          self.error('invalid error code', 1002);\n          return;\n        }\n        var message = '';\n        if (data && data.length > 2) {\n          var messageBuffer = data.slice(2);\n          if (!isValidUTF8(messageBuffer)) {\n            self.error('invalid utf8 sequence', 1007);\n            return;\n          }\n          message = messageBuffer.toString('utf8');\n        }\n        self.onclose(code, message, {masked: state.masked});\n        self.reset();\n      });\n      this.flush();\n    },\n  },\n  // ping\n  '9': {\n    start: function(data) {\n      var self = this;\n      if (self.state.lastFragment == false) {\n        self.error('fragmented ping is not supported', 1002);\n        return;\n      }\n\n      // decode length\n      var firstLength = data[1] & 0x7f;\n      if (firstLength < 126) {\n        opcodes['9'].getData.call(self, firstLength);\n      }\n      else {\n        self.error('control frames cannot have more than 125 bytes of data', 1002);\n      }\n    },\n    getData: function(length) {\n      var self = this;\n      if (self.state.masked) {\n        self.expectHeader(4, function(data) {\n          var mask = data;\n          self.expectData(length, function(data) {\n            opcodes['9'].finish.call(self, mask, data);\n          });\n        });\n      }\n      else {\n        self.expectData(length, function(data) {\n          opcodes['9'].finish.call(self, null, data);\n        });\n      }\n    },\n    finish: function(mask, data) {\n      var self = this;\n      data = this.unmask(mask, data, true);\n      var state = clone(this.state);\n      this.messageHandlers.push(function(callback) {\n        self.onping(data, {masked: state.masked, binary: true});\n        callback();\n      });\n      this.flush();\n      this.endPacket();\n    }\n  },\n  // pong\n  '10': {\n    start: function(data) {\n      var self = this;\n      if (self.state.lastFragment == false) {\n        self.error('fragmented pong is not supported', 1002);\n        return;\n      }\n\n      // decode length\n      var firstLength = data[1] & 0x7f;\n      if (firstLength < 126) {\n        opcodes['10'].getData.call(self, firstLength);\n      }\n      else {\n        self.error('control frames cannot have more than 125 bytes of data', 1002);\n      }\n    },\n    getData: function(length) {\n      var self = this;\n      if (this.state.masked) {\n        this.expectHeader(4, function(data) {\n          var mask = data;\n          self.expectData(length, function(data) {\n            opcodes['10'].finish.call(self, mask, data);\n          });\n        });\n      }\n      else {\n        this.expectData(length, function(data) {\n          opcodes['10'].finish.call(self, null, data);\n        });\n      }\n    },\n    finish: function(mask, data) {\n      var self = this;\n      data = self.unmask(mask, data, true);\n      var state = clone(this.state);\n      this.messageHandlers.push(function(callback) {\n        self.onpong(data, {masked: state.masked, binary: true});\n        callback();\n      });\n      this.flush();\n      this.endPacket();\n    }\n  }\n}\n","map":{"mappings":[{"source":"node_modules/ws/lib/Receiver.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":77,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":78,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":79,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":80,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":81,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":82,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":83,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":84,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":85,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":86,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":87,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":88,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":89,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":90,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":91,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":92,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":93,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":94,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":95,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":96,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":97,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":98,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":99,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":100,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":101,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":102,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":103,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":104,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":105,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":106,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":107,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":108,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":109,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":110,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":111,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":112,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":113,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":114,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":115,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":116,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":117,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":118,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":119,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":120,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":121,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":122,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":123,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":124,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":125,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":126,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":127,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":128,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":129,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":130,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":131,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":132,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":133,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":134,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":135,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":136,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":137,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":138,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":139,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":140,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":141,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":142,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":143,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":144,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":145,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":146,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":147,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":148,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":149,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":150,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":151,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":152,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":153,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":154,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":155,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":156,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":157,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":158,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":159,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":160,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":161,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":162,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":163,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":164,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":165,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":166,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":167,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":168,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":169,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":170,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":171,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":172,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":173,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":174,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":175,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":176,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":177,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":178,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":179,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":180,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":181,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":182,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":183,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":184,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":185,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":186,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":187,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":188,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":189,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":190,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":191,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":192,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":193,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":194,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":195,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":196,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":197,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":198,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":199,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":200,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":201,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":202,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":203,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":204,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":205,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":206,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":207,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":208,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":209,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":210,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":211,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":212,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":213,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":214,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":215,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":216,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":217,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":218,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":219,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":220,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":221,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":222,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":223,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":224,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":225,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":226,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":227,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":228,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":229,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":230,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":231,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":232,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":233,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":234,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":235,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":236,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":237,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":238,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":239,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":240,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":241,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":242,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":243,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":244,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":245,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":246,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":247,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":248,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":249,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":250,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":251,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":252,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":253,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":254,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":255,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":256,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":257,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":258,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":259,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":260,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":261,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":262,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":263,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":264,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":265,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":266,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":267,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":268,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":269,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":270,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":271,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":272,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":273,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":274,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":275,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":276,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":277,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":278,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":279,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":280,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":281,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":282,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":283,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":284,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":285,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":286,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":287,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":288,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":289,"column":0},"generated":{"line":290,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":290,"column":0},"generated":{"line":291,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":291,"column":0},"generated":{"line":292,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":292,"column":0},"generated":{"line":293,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":293,"column":0},"generated":{"line":294,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":294,"column":0},"generated":{"line":295,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":295,"column":0},"generated":{"line":296,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":296,"column":0},"generated":{"line":297,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":297,"column":0},"generated":{"line":298,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":298,"column":0},"generated":{"line":299,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":299,"column":0},"generated":{"line":300,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":300,"column":0},"generated":{"line":301,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":301,"column":0},"generated":{"line":302,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":302,"column":0},"generated":{"line":303,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":303,"column":0},"generated":{"line":304,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":304,"column":0},"generated":{"line":305,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":305,"column":0},"generated":{"line":306,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":306,"column":0},"generated":{"line":307,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":307,"column":0},"generated":{"line":308,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":308,"column":0},"generated":{"line":309,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":309,"column":0},"generated":{"line":310,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":310,"column":0},"generated":{"line":311,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":311,"column":0},"generated":{"line":312,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":312,"column":0},"generated":{"line":313,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":313,"column":0},"generated":{"line":314,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":314,"column":0},"generated":{"line":315,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":315,"column":0},"generated":{"line":316,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":316,"column":0},"generated":{"line":317,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":317,"column":0},"generated":{"line":318,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":318,"column":0},"generated":{"line":319,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":319,"column":0},"generated":{"line":320,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":320,"column":0},"generated":{"line":321,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":321,"column":0},"generated":{"line":322,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":322,"column":0},"generated":{"line":323,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":323,"column":0},"generated":{"line":324,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":324,"column":0},"generated":{"line":325,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":325,"column":0},"generated":{"line":326,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":326,"column":0},"generated":{"line":327,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":327,"column":0},"generated":{"line":328,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":328,"column":0},"generated":{"line":329,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":329,"column":0},"generated":{"line":330,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":330,"column":0},"generated":{"line":331,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":331,"column":0},"generated":{"line":332,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":332,"column":0},"generated":{"line":333,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":333,"column":0},"generated":{"line":334,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":334,"column":0},"generated":{"line":335,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":335,"column":0},"generated":{"line":336,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":336,"column":0},"generated":{"line":337,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":337,"column":0},"generated":{"line":338,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":338,"column":0},"generated":{"line":339,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":339,"column":0},"generated":{"line":340,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":340,"column":0},"generated":{"line":341,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":341,"column":0},"generated":{"line":342,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":342,"column":0},"generated":{"line":343,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":343,"column":0},"generated":{"line":344,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":344,"column":0},"generated":{"line":345,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":345,"column":0},"generated":{"line":346,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":346,"column":0},"generated":{"line":347,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":347,"column":0},"generated":{"line":348,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":348,"column":0},"generated":{"line":349,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":349,"column":0},"generated":{"line":350,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":350,"column":0},"generated":{"line":351,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":351,"column":0},"generated":{"line":352,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":352,"column":0},"generated":{"line":353,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":353,"column":0},"generated":{"line":354,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":354,"column":0},"generated":{"line":355,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":355,"column":0},"generated":{"line":356,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":356,"column":0},"generated":{"line":357,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":357,"column":0},"generated":{"line":358,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":358,"column":0},"generated":{"line":359,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":359,"column":0},"generated":{"line":360,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":360,"column":0},"generated":{"line":361,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":361,"column":0},"generated":{"line":362,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":362,"column":0},"generated":{"line":363,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":363,"column":0},"generated":{"line":364,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":364,"column":0},"generated":{"line":365,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":365,"column":0},"generated":{"line":366,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":366,"column":0},"generated":{"line":367,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":367,"column":0},"generated":{"line":368,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":368,"column":0},"generated":{"line":369,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":369,"column":0},"generated":{"line":370,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":370,"column":0},"generated":{"line":371,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":371,"column":0},"generated":{"line":372,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":372,"column":0},"generated":{"line":373,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":373,"column":0},"generated":{"line":374,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":374,"column":0},"generated":{"line":375,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":375,"column":0},"generated":{"line":376,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":376,"column":0},"generated":{"line":377,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":377,"column":0},"generated":{"line":378,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":378,"column":0},"generated":{"line":379,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":379,"column":0},"generated":{"line":380,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":380,"column":0},"generated":{"line":381,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":381,"column":0},"generated":{"line":382,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":382,"column":0},"generated":{"line":383,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":383,"column":0},"generated":{"line":384,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":384,"column":0},"generated":{"line":385,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":385,"column":0},"generated":{"line":386,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":386,"column":0},"generated":{"line":387,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":387,"column":0},"generated":{"line":388,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":388,"column":0},"generated":{"line":389,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":389,"column":0},"generated":{"line":390,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":390,"column":0},"generated":{"line":391,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":391,"column":0},"generated":{"line":392,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":392,"column":0},"generated":{"line":393,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":393,"column":0},"generated":{"line":394,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":394,"column":0},"generated":{"line":395,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":395,"column":0},"generated":{"line":396,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":396,"column":0},"generated":{"line":397,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":397,"column":0},"generated":{"line":398,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":398,"column":0},"generated":{"line":399,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":399,"column":0},"generated":{"line":400,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":400,"column":0},"generated":{"line":401,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":401,"column":0},"generated":{"line":402,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":402,"column":0},"generated":{"line":403,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":403,"column":0},"generated":{"line":404,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":404,"column":0},"generated":{"line":405,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":405,"column":0},"generated":{"line":406,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":406,"column":0},"generated":{"line":407,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":407,"column":0},"generated":{"line":408,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":408,"column":0},"generated":{"line":409,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":409,"column":0},"generated":{"line":410,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":410,"column":0},"generated":{"line":411,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":411,"column":0},"generated":{"line":412,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":412,"column":0},"generated":{"line":413,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":413,"column":0},"generated":{"line":414,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":414,"column":0},"generated":{"line":415,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":415,"column":0},"generated":{"line":416,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":416,"column":0},"generated":{"line":417,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":417,"column":0},"generated":{"line":418,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":418,"column":0},"generated":{"line":419,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":419,"column":0},"generated":{"line":420,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":420,"column":0},"generated":{"line":421,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":421,"column":0},"generated":{"line":422,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":422,"column":0},"generated":{"line":423,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":423,"column":0},"generated":{"line":424,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":424,"column":0},"generated":{"line":425,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":425,"column":0},"generated":{"line":426,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":426,"column":0},"generated":{"line":427,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":427,"column":0},"generated":{"line":428,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":428,"column":0},"generated":{"line":429,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":429,"column":0},"generated":{"line":430,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":430,"column":0},"generated":{"line":431,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":431,"column":0},"generated":{"line":432,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":432,"column":0},"generated":{"line":433,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":433,"column":0},"generated":{"line":434,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":434,"column":0},"generated":{"line":435,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":435,"column":0},"generated":{"line":436,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":436,"column":0},"generated":{"line":437,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":437,"column":0},"generated":{"line":438,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":438,"column":0},"generated":{"line":439,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":439,"column":0},"generated":{"line":440,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":440,"column":0},"generated":{"line":441,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":441,"column":0},"generated":{"line":442,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":442,"column":0},"generated":{"line":443,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":443,"column":0},"generated":{"line":444,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":444,"column":0},"generated":{"line":445,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":445,"column":0},"generated":{"line":446,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":446,"column":0},"generated":{"line":447,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":447,"column":0},"generated":{"line":448,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":448,"column":0},"generated":{"line":449,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":449,"column":0},"generated":{"line":450,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":450,"column":0},"generated":{"line":451,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":451,"column":0},"generated":{"line":452,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":452,"column":0},"generated":{"line":453,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":453,"column":0},"generated":{"line":454,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":454,"column":0},"generated":{"line":455,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":455,"column":0},"generated":{"line":456,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":456,"column":0},"generated":{"line":457,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":457,"column":0},"generated":{"line":458,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":458,"column":0},"generated":{"line":459,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":459,"column":0},"generated":{"line":460,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":460,"column":0},"generated":{"line":461,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":461,"column":0},"generated":{"line":462,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":462,"column":0},"generated":{"line":463,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":463,"column":0},"generated":{"line":464,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":464,"column":0},"generated":{"line":465,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":465,"column":0},"generated":{"line":466,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":466,"column":0},"generated":{"line":467,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":467,"column":0},"generated":{"line":468,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":468,"column":0},"generated":{"line":469,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":469,"column":0},"generated":{"line":470,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":470,"column":0},"generated":{"line":471,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":471,"column":0},"generated":{"line":472,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":472,"column":0},"generated":{"line":473,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":473,"column":0},"generated":{"line":474,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":474,"column":0},"generated":{"line":475,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":475,"column":0},"generated":{"line":476,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":476,"column":0},"generated":{"line":477,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":477,"column":0},"generated":{"line":478,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":478,"column":0},"generated":{"line":479,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":479,"column":0},"generated":{"line":480,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":480,"column":0},"generated":{"line":481,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":481,"column":0},"generated":{"line":482,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":482,"column":0},"generated":{"line":483,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":483,"column":0},"generated":{"line":484,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":484,"column":0},"generated":{"line":485,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":485,"column":0},"generated":{"line":486,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":486,"column":0},"generated":{"line":487,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":487,"column":0},"generated":{"line":488,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":488,"column":0},"generated":{"line":489,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":489,"column":0},"generated":{"line":490,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":490,"column":0},"generated":{"line":491,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":491,"column":0},"generated":{"line":492,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":492,"column":0},"generated":{"line":493,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":493,"column":0},"generated":{"line":494,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":494,"column":0},"generated":{"line":495,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":495,"column":0},"generated":{"line":496,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":496,"column":0},"generated":{"line":497,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":497,"column":0},"generated":{"line":498,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":498,"column":0},"generated":{"line":499,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":499,"column":0},"generated":{"line":500,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":500,"column":0},"generated":{"line":501,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":501,"column":0},"generated":{"line":502,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":502,"column":0},"generated":{"line":503,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":503,"column":0},"generated":{"line":504,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":504,"column":0},"generated":{"line":505,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":505,"column":0},"generated":{"line":506,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":506,"column":0},"generated":{"line":507,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":507,"column":0},"generated":{"line":508,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":508,"column":0},"generated":{"line":509,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":509,"column":0},"generated":{"line":510,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":510,"column":0},"generated":{"line":511,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":511,"column":0},"generated":{"line":512,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":512,"column":0},"generated":{"line":513,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":513,"column":0},"generated":{"line":514,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":514,"column":0},"generated":{"line":515,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":515,"column":0},"generated":{"line":516,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":516,"column":0},"generated":{"line":517,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":517,"column":0},"generated":{"line":518,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":518,"column":0},"generated":{"line":519,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":519,"column":0},"generated":{"line":520,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":520,"column":0},"generated":{"line":521,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":521,"column":0},"generated":{"line":522,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":522,"column":0},"generated":{"line":523,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":523,"column":0},"generated":{"line":524,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":524,"column":0},"generated":{"line":525,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":525,"column":0},"generated":{"line":526,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":526,"column":0},"generated":{"line":527,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":527,"column":0},"generated":{"line":528,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":528,"column":0},"generated":{"line":529,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":529,"column":0},"generated":{"line":530,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":530,"column":0},"generated":{"line":531,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":531,"column":0},"generated":{"line":532,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":532,"column":0},"generated":{"line":533,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":533,"column":0},"generated":{"line":534,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":534,"column":0},"generated":{"line":535,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":535,"column":0},"generated":{"line":536,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":536,"column":0},"generated":{"line":537,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":537,"column":0},"generated":{"line":538,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":538,"column":0},"generated":{"line":539,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":539,"column":0},"generated":{"line":540,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":540,"column":0},"generated":{"line":541,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":541,"column":0},"generated":{"line":542,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":542,"column":0},"generated":{"line":543,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":543,"column":0},"generated":{"line":544,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":544,"column":0},"generated":{"line":545,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":545,"column":0},"generated":{"line":546,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":546,"column":0},"generated":{"line":547,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":547,"column":0},"generated":{"line":548,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":548,"column":0},"generated":{"line":549,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":549,"column":0},"generated":{"line":550,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":550,"column":0},"generated":{"line":551,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":551,"column":0},"generated":{"line":552,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":552,"column":0},"generated":{"line":553,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":553,"column":0},"generated":{"line":554,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":554,"column":0},"generated":{"line":555,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":555,"column":0},"generated":{"line":556,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":556,"column":0},"generated":{"line":557,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":557,"column":0},"generated":{"line":558,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":558,"column":0},"generated":{"line":559,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":559,"column":0},"generated":{"line":560,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":560,"column":0},"generated":{"line":561,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":561,"column":0},"generated":{"line":562,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":562,"column":0},"generated":{"line":563,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":563,"column":0},"generated":{"line":564,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":564,"column":0},"generated":{"line":565,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":565,"column":0},"generated":{"line":566,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":566,"column":0},"generated":{"line":567,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":567,"column":0},"generated":{"line":568,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":568,"column":0},"generated":{"line":569,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":569,"column":0},"generated":{"line":570,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":570,"column":0},"generated":{"line":571,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":571,"column":0},"generated":{"line":572,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":572,"column":0},"generated":{"line":573,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":573,"column":0},"generated":{"line":574,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":574,"column":0},"generated":{"line":575,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":575,"column":0},"generated":{"line":576,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":576,"column":0},"generated":{"line":577,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":577,"column":0},"generated":{"line":578,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":578,"column":0},"generated":{"line":579,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":579,"column":0},"generated":{"line":580,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":580,"column":0},"generated":{"line":581,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":581,"column":0},"generated":{"line":582,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":582,"column":0},"generated":{"line":583,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":583,"column":0},"generated":{"line":584,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":584,"column":0},"generated":{"line":585,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":585,"column":0},"generated":{"line":586,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":586,"column":0},"generated":{"line":587,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":587,"column":0},"generated":{"line":588,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":588,"column":0},"generated":{"line":589,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":589,"column":0},"generated":{"line":590,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":590,"column":0},"generated":{"line":591,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":591,"column":0},"generated":{"line":592,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":592,"column":0},"generated":{"line":593,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":593,"column":0},"generated":{"line":594,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":594,"column":0},"generated":{"line":595,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":595,"column":0},"generated":{"line":596,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":596,"column":0},"generated":{"line":597,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":597,"column":0},"generated":{"line":598,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":598,"column":0},"generated":{"line":599,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":599,"column":0},"generated":{"line":600,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":600,"column":0},"generated":{"line":601,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":601,"column":0},"generated":{"line":602,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":602,"column":0},"generated":{"line":603,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":603,"column":0},"generated":{"line":604,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":604,"column":0},"generated":{"line":605,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":605,"column":0},"generated":{"line":606,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":606,"column":0},"generated":{"line":607,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":607,"column":0},"generated":{"line":608,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":608,"column":0},"generated":{"line":609,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":609,"column":0},"generated":{"line":610,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":610,"column":0},"generated":{"line":611,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":611,"column":0},"generated":{"line":612,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":612,"column":0},"generated":{"line":613,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":613,"column":0},"generated":{"line":614,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":614,"column":0},"generated":{"line":615,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":615,"column":0},"generated":{"line":616,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":616,"column":0},"generated":{"line":617,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":617,"column":0},"generated":{"line":618,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":618,"column":0},"generated":{"line":619,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":619,"column":0},"generated":{"line":620,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":620,"column":0},"generated":{"line":621,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":621,"column":0},"generated":{"line":622,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":622,"column":0},"generated":{"line":623,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":623,"column":0},"generated":{"line":624,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":624,"column":0},"generated":{"line":625,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":625,"column":0},"generated":{"line":626,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":626,"column":0},"generated":{"line":627,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":627,"column":0},"generated":{"line":628,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":628,"column":0},"generated":{"line":629,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":629,"column":0},"generated":{"line":630,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":630,"column":0},"generated":{"line":631,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":631,"column":0},"generated":{"line":632,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":632,"column":0},"generated":{"line":633,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":633,"column":0},"generated":{"line":634,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":634,"column":0},"generated":{"line":635,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":635,"column":0},"generated":{"line":636,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":636,"column":0},"generated":{"line":637,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":637,"column":0},"generated":{"line":638,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":638,"column":0},"generated":{"line":639,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":639,"column":0},"generated":{"line":640,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":640,"column":0},"generated":{"line":641,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":641,"column":0},"generated":{"line":642,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":642,"column":0},"generated":{"line":643,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":643,"column":0},"generated":{"line":644,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":644,"column":0},"generated":{"line":645,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":645,"column":0},"generated":{"line":646,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":646,"column":0},"generated":{"line":647,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":647,"column":0},"generated":{"line":648,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":648,"column":0},"generated":{"line":649,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":649,"column":0},"generated":{"line":650,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":650,"column":0},"generated":{"line":651,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":651,"column":0},"generated":{"line":652,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":652,"column":0},"generated":{"line":653,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":653,"column":0},"generated":{"line":654,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":654,"column":0},"generated":{"line":655,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":655,"column":0},"generated":{"line":656,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":656,"column":0},"generated":{"line":657,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":657,"column":0},"generated":{"line":658,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":658,"column":0},"generated":{"line":659,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":659,"column":0},"generated":{"line":660,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":660,"column":0},"generated":{"line":661,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":661,"column":0},"generated":{"line":662,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":662,"column":0},"generated":{"line":663,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":663,"column":0},"generated":{"line":664,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":664,"column":0},"generated":{"line":665,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":665,"column":0},"generated":{"line":666,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":666,"column":0},"generated":{"line":667,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":667,"column":0},"generated":{"line":668,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":668,"column":0},"generated":{"line":669,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":669,"column":0},"generated":{"line":670,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":670,"column":0},"generated":{"line":671,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":671,"column":0},"generated":{"line":672,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":672,"column":0},"generated":{"line":673,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":673,"column":0},"generated":{"line":674,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":674,"column":0},"generated":{"line":675,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":675,"column":0},"generated":{"line":676,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":676,"column":0},"generated":{"line":677,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":677,"column":0},"generated":{"line":678,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":678,"column":0},"generated":{"line":679,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":679,"column":0},"generated":{"line":680,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":680,"column":0},"generated":{"line":681,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":681,"column":0},"generated":{"line":682,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":682,"column":0},"generated":{"line":683,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":683,"column":0},"generated":{"line":684,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":684,"column":0},"generated":{"line":685,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":685,"column":0},"generated":{"line":686,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":686,"column":0},"generated":{"line":687,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":687,"column":0},"generated":{"line":688,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":688,"column":0},"generated":{"line":689,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":689,"column":0},"generated":{"line":690,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":690,"column":0},"generated":{"line":691,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":691,"column":0},"generated":{"line":692,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":692,"column":0},"generated":{"line":693,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":693,"column":0},"generated":{"line":694,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":694,"column":0},"generated":{"line":695,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":695,"column":0},"generated":{"line":696,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":696,"column":0},"generated":{"line":697,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":697,"column":0},"generated":{"line":698,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":698,"column":0},"generated":{"line":699,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":699,"column":0},"generated":{"line":700,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":700,"column":0},"generated":{"line":701,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":701,"column":0},"generated":{"line":702,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":702,"column":0},"generated":{"line":703,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":703,"column":0},"generated":{"line":704,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":704,"column":0},"generated":{"line":705,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":705,"column":0},"generated":{"line":706,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":706,"column":0},"generated":{"line":707,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":707,"column":0},"generated":{"line":708,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":708,"column":0},"generated":{"line":709,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":709,"column":0},"generated":{"line":710,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":710,"column":0},"generated":{"line":711,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":711,"column":0},"generated":{"line":712,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":712,"column":0},"generated":{"line":713,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":713,"column":0},"generated":{"line":714,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":714,"column":0},"generated":{"line":715,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":715,"column":0},"generated":{"line":716,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":716,"column":0},"generated":{"line":717,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":717,"column":0},"generated":{"line":718,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":718,"column":0},"generated":{"line":719,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":719,"column":0},"generated":{"line":720,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":720,"column":0},"generated":{"line":721,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":721,"column":0},"generated":{"line":722,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":722,"column":0},"generated":{"line":723,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":723,"column":0},"generated":{"line":724,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":724,"column":0},"generated":{"line":725,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":725,"column":0},"generated":{"line":726,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":726,"column":0},"generated":{"line":727,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":727,"column":0},"generated":{"line":728,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":728,"column":0},"generated":{"line":729,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":729,"column":0},"generated":{"line":730,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":730,"column":0},"generated":{"line":731,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":731,"column":0},"generated":{"line":732,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":732,"column":0},"generated":{"line":733,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":733,"column":0},"generated":{"line":734,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":734,"column":0},"generated":{"line":735,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":735,"column":0},"generated":{"line":736,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":736,"column":0},"generated":{"line":737,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":737,"column":0},"generated":{"line":738,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":738,"column":0},"generated":{"line":739,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":739,"column":0},"generated":{"line":740,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":740,"column":0},"generated":{"line":741,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":741,"column":0},"generated":{"line":742,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":742,"column":0},"generated":{"line":743,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":743,"column":0},"generated":{"line":744,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":744,"column":0},"generated":{"line":745,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":745,"column":0},"generated":{"line":746,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":746,"column":0},"generated":{"line":747,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":747,"column":0},"generated":{"line":748,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":748,"column":0},"generated":{"line":749,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":749,"column":0},"generated":{"line":750,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":750,"column":0},"generated":{"line":751,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":751,"column":0},"generated":{"line":752,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":752,"column":0},"generated":{"line":753,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":753,"column":0},"generated":{"line":754,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":754,"column":0},"generated":{"line":755,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":755,"column":0},"generated":{"line":756,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":756,"column":0},"generated":{"line":757,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":757,"column":0},"generated":{"line":758,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":758,"column":0},"generated":{"line":759,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":759,"column":0},"generated":{"line":760,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":760,"column":0},"generated":{"line":761,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":761,"column":0},"generated":{"line":762,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":762,"column":0},"generated":{"line":763,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":763,"column":0},"generated":{"line":764,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":764,"column":0},"generated":{"line":765,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":765,"column":0},"generated":{"line":766,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":766,"column":0},"generated":{"line":767,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":767,"column":0},"generated":{"line":768,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":768,"column":0},"generated":{"line":769,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":769,"column":0},"generated":{"line":770,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":770,"column":0},"generated":{"line":771,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":771,"column":0},"generated":{"line":772,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":772,"column":0},"generated":{"line":773,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":773,"column":0},"generated":{"line":774,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":774,"column":0},"generated":{"line":775,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":775,"column":0},"generated":{"line":776,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":776,"column":0},"generated":{"line":777,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":777,"column":0},"generated":{"line":778,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":778,"column":0},"generated":{"line":779,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":779,"column":0},"generated":{"line":780,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":780,"column":0},"generated":{"line":781,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":781,"column":0},"generated":{"line":782,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":782,"column":0},"generated":{"line":783,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":783,"column":0},"generated":{"line":784,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":784,"column":0},"generated":{"line":785,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":785,"column":0},"generated":{"line":786,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":786,"column":0},"generated":{"line":787,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":787,"column":0},"generated":{"line":788,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":788,"column":0},"generated":{"line":789,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":789,"column":0},"generated":{"line":790,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":790,"column":0},"generated":{"line":791,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":791,"column":0},"generated":{"line":792,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":792,"column":0},"generated":{"line":793,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":793,"column":0},"generated":{"line":794,"column":0}},{"source":"node_modules/ws/lib/Receiver.js","original":{"line":794,"column":0},"generated":{"line":795,"column":0}}],"sources":{"node_modules/ws/lib/Receiver.js":"/*!\n * ws: a node.js websocket client\n * Copyright(c) 2011 Einar Otto Stangvik <einaros@gmail.com>\n * MIT Licensed\n */\n\nvar util = require('util')\n  , isValidUTF8 = require('./Validation')\n  , ErrorCodes = require('./ErrorCodes')\n  , BufferPool = require('./BufferPool')\n  , bufferUtil = require('./BufferUtil')\n  , PerMessageDeflate = require('./PerMessageDeflate');\n\n/**\n * HyBi Receiver implementation\n */\n\nfunction Receiver (extensions,maxPayload) {\n  if (this instanceof Receiver === false) {\n    throw new TypeError(\"Classes can't be function-called\");\n  }\n  if(typeof extensions==='number'){\n    maxPayload=extensions;\n    extensions={};\n  }\n\n\n  // memory pool for fragmented messages\n  var fragmentedPoolPrevUsed = -1;\n  this.fragmentedBufferPool = new BufferPool(1024, function(db, length) {\n    return db.used + length;\n  }, function(db) {\n    return fragmentedPoolPrevUsed = fragmentedPoolPrevUsed >= 0 ?\n      Math.ceil((fragmentedPoolPrevUsed + db.used) / 2) :\n      db.used;\n  });\n\n  // memory pool for unfragmented messages\n  var unfragmentedPoolPrevUsed = -1;\n  this.unfragmentedBufferPool = new BufferPool(1024, function(db, length) {\n    return db.used + length;\n  }, function(db) {\n    return unfragmentedPoolPrevUsed = unfragmentedPoolPrevUsed >= 0 ?\n      Math.ceil((unfragmentedPoolPrevUsed + db.used) / 2) :\n      db.used;\n  });\n  this.extensions = extensions || {};\n  this.maxPayload = maxPayload || 0;\n  this.currentPayloadLength = 0;\n  this.state = {\n    activeFragmentedOperation: null,\n    lastFragment: false,\n    masked: false,\n    opcode: 0,\n    fragmentedOperation: false\n  };\n  this.overflow = [];\n  this.headerBuffer = new Buffer(10);\n  this.expectOffset = 0;\n  this.expectBuffer = null;\n  this.expectHandler = null;\n  this.currentMessage = [];\n  this.currentMessageLength = 0;\n  this.messageHandlers = [];\n  this.expectHeader(2, this.processPacket);\n  this.dead = false;\n  this.processing = false;\n\n  this.onerror = function() {};\n  this.ontext = function() {};\n  this.onbinary = function() {};\n  this.onclose = function() {};\n  this.onping = function() {};\n  this.onpong = function() {};\n}\n\nmodule.exports = Receiver;\n\n/**\n * Add new data to the parser.\n *\n * @api public\n */\n\nReceiver.prototype.add = function(data) {\n  if (this.dead) return;\n  var dataLength = data.length;\n  if (dataLength == 0) return;\n  if (this.expectBuffer == null) {\n    this.overflow.push(data);\n    return;\n  }\n  var toRead = Math.min(dataLength, this.expectBuffer.length - this.expectOffset);\n  fastCopy(toRead, data, this.expectBuffer, this.expectOffset);\n  this.expectOffset += toRead;\n  if (toRead < dataLength) {\n    this.overflow.push(data.slice(toRead));\n  }\n  while (this.expectBuffer && this.expectOffset == this.expectBuffer.length) {\n    var bufferForHandler = this.expectBuffer;\n    this.expectBuffer = null;\n    this.expectOffset = 0;\n    this.expectHandler.call(this, bufferForHandler);\n  }\n};\n\n/**\n * Releases all resources used by the receiver.\n *\n * @api public\n */\n\nReceiver.prototype.cleanup = function() {\n  this.dead = true;\n  this.overflow = null;\n  this.headerBuffer = null;\n  this.expectBuffer = null;\n  this.expectHandler = null;\n  this.unfragmentedBufferPool = null;\n  this.fragmentedBufferPool = null;\n  this.state = null;\n  this.currentMessage = null;\n  this.onerror = null;\n  this.ontext = null;\n  this.onbinary = null;\n  this.onclose = null;\n  this.onping = null;\n  this.onpong = null;\n};\n\n/**\n * Waits for a certain amount of header bytes to be available, then fires a callback.\n *\n * @api private\n */\n\nReceiver.prototype.expectHeader = function(length, handler) {\n  if (length == 0) {\n    handler(null);\n    return;\n  }\n  this.expectBuffer = this.headerBuffer.slice(this.expectOffset, this.expectOffset + length);\n  this.expectHandler = handler;\n  var toRead = length;\n  while (toRead > 0 && this.overflow.length > 0) {\n    var fromOverflow = this.overflow.pop();\n    if (toRead < fromOverflow.length) this.overflow.push(fromOverflow.slice(toRead));\n    var read = Math.min(fromOverflow.length, toRead);\n    fastCopy(read, fromOverflow, this.expectBuffer, this.expectOffset);\n    this.expectOffset += read;\n    toRead -= read;\n  }\n};\n\n/**\n * Waits for a certain amount of data bytes to be available, then fires a callback.\n *\n * @api private\n */\n\nReceiver.prototype.expectData = function(length, handler) {\n  if (length == 0) {\n    handler(null);\n    return;\n  }\n  this.expectBuffer = this.allocateFromPool(length, this.state.fragmentedOperation);\n  this.expectHandler = handler;\n  var toRead = length;\n  while (toRead > 0 && this.overflow.length > 0) {\n    var fromOverflow = this.overflow.pop();\n    if (toRead < fromOverflow.length) this.overflow.push(fromOverflow.slice(toRead));\n    var read = Math.min(fromOverflow.length, toRead);\n    fastCopy(read, fromOverflow, this.expectBuffer, this.expectOffset);\n    this.expectOffset += read;\n    toRead -= read;\n  }\n};\n\n/**\n * Allocates memory from the buffer pool.\n *\n * @api private\n */\n\nReceiver.prototype.allocateFromPool = function(length, isFragmented) {\n  return (isFragmented ? this.fragmentedBufferPool : this.unfragmentedBufferPool).get(length);\n};\n\n/**\n * Start processing a new packet.\n *\n * @api private\n */\n\nReceiver.prototype.processPacket = function (data) {\n  if (this.extensions[PerMessageDeflate.extensionName]) {\n    if ((data[0] & 0x30) != 0) {\n      this.error('reserved fields (2, 3) must be empty', 1002);\n      return;\n    }\n  } else {\n    if ((data[0] & 0x70) != 0) {\n      this.error('reserved fields must be empty', 1002);\n      return;\n    }\n  }\n  this.state.lastFragment = (data[0] & 0x80) == 0x80;\n  this.state.masked = (data[1] & 0x80) == 0x80;\n  var compressed = (data[0] & 0x40) == 0x40;\n  var opcode = data[0] & 0xf;\n  if (opcode === 0) {\n    if (compressed) {\n      this.error('continuation frame cannot have the Per-message Compressed bits', 1002);\n      return;\n    }\n    // continuation frame\n    this.state.fragmentedOperation = true;\n    this.state.opcode = this.state.activeFragmentedOperation;\n    if (!(this.state.opcode == 1 || this.state.opcode == 2)) {\n      this.error('continuation frame cannot follow current opcode', 1002);\n      return;\n    }\n  }\n  else {\n    if (opcode < 3 && this.state.activeFragmentedOperation != null) {\n      this.error('data frames after the initial data frame must have opcode 0', 1002);\n      return;\n    }\n    if (opcode >= 8 && compressed) {\n      this.error('control frames cannot have the Per-message Compressed bits', 1002);\n      return;\n    }\n    this.state.compressed = compressed;\n    this.state.opcode = opcode;\n    if (this.state.lastFragment === false) {\n      this.state.fragmentedOperation = true;\n      this.state.activeFragmentedOperation = opcode;\n    }\n    else this.state.fragmentedOperation = false;\n  }\n  var handler = opcodes[this.state.opcode];\n  if (typeof handler == 'undefined') this.error('no handler for opcode ' + this.state.opcode, 1002);\n  else {\n    handler.start.call(this, data);\n  }\n};\n\n/**\n * Endprocessing a packet.\n *\n * @api private\n */\n\nReceiver.prototype.endPacket = function() {\n  if (this.dead) return;\n  if (!this.state.fragmentedOperation) this.unfragmentedBufferPool.reset(true);\n  else if (this.state.lastFragment) this.fragmentedBufferPool.reset(true);\n  this.expectOffset = 0;\n  this.expectBuffer = null;\n  this.expectHandler = null;\n  if (this.state.lastFragment && this.state.opcode === this.state.activeFragmentedOperation) {\n    // end current fragmented operation\n    this.state.activeFragmentedOperation = null;\n  }\n  this.currentPayloadLength = 0;\n  this.state.lastFragment = false;\n  this.state.opcode = this.state.activeFragmentedOperation != null ? this.state.activeFragmentedOperation : 0;\n  this.state.masked = false;\n  this.expectHeader(2, this.processPacket);\n};\n\n/**\n * Reset the parser state.\n *\n * @api private\n */\n\nReceiver.prototype.reset = function() {\n  if (this.dead) return;\n  this.state = {\n    activeFragmentedOperation: null,\n    lastFragment: false,\n    masked: false,\n    opcode: 0,\n    fragmentedOperation: false\n  };\n  this.fragmentedBufferPool.reset(true);\n  this.unfragmentedBufferPool.reset(true);\n  this.expectOffset = 0;\n  this.expectBuffer = null;\n  this.expectHandler = null;\n  this.overflow = [];\n  this.currentMessage = [];\n  this.currentMessageLength = 0;\n  this.messageHandlers = [];\n  this.currentPayloadLength = 0;\n};\n\n/**\n * Unmask received data.\n *\n * @api private\n */\n\nReceiver.prototype.unmask = function (mask, buf, binary) {\n  if (mask != null && buf != null) bufferUtil.unmask(buf, mask);\n  if (binary) return buf;\n  return buf != null ? buf.toString('utf8') : '';\n};\n\n/**\n * Handles an error\n *\n * @api private\n */\n\nReceiver.prototype.error = function (reason, protocolErrorCode) {\n  if (this.dead) return;\n  this.reset();\n  if(typeof reason == 'string'){\n    this.onerror(new Error(reason), protocolErrorCode);\n  }\n  else if(reason.constructor == Error){\n    this.onerror(reason, protocolErrorCode);\n  }\n  else{\n    this.onerror(new Error(\"An error occured\"),protocolErrorCode);\n  }\n  return this;\n};\n\n/**\n * Execute message handler buffers\n *\n * @api private\n */\n\nReceiver.prototype.flush = function() {\n  if (this.processing || this.dead) return;\n\n  var handler = this.messageHandlers.shift();\n  if (!handler) return;\n\n  this.processing = true;\n  var self = this;\n\n  handler(function() {\n    self.processing = false;\n    self.flush();\n  });\n};\n\n/**\n * Apply extensions to message\n *\n * @api private\n */\n\nReceiver.prototype.applyExtensions = function(messageBuffer, fin, compressed, callback) {\n  var self = this;\n  if (compressed) {\n    this.extensions[PerMessageDeflate.extensionName].decompress(messageBuffer, fin, function(err, buffer) {\n      if (self.dead) return;\n      if (err) {\n        callback(new Error('invalid compressed data'));\n        return;\n      }\n      callback(null, buffer);\n    });\n  } else {\n    callback(null, messageBuffer);\n  }\n};\n\n/**\n* Checks payload size, disconnects socket when it exceeds maxPayload\n*\n* @api private\n*/\nReceiver.prototype.maxPayloadExceeded = function(length) {\n  if (this.maxPayload=== undefined || this.maxPayload === null || this.maxPayload < 1) {\n    return false;\n  }\n  var fullLength = this.currentPayloadLength + length;\n  if (fullLength < this.maxPayload) {\n    this.currentPayloadLength = fullLength;\n    return false;\n  }\n  this.error('payload cannot exceed ' + this.maxPayload + ' bytes', 1009);\n  this.messageBuffer=[];\n  this.cleanup();\n\n  return true;\n};\n\n/**\n * Buffer utilities\n */\n\nfunction readUInt16BE(start) {\n  return (this[start]<<8) +\n         this[start+1];\n}\n\nfunction readUInt32BE(start) {\n  return (this[start]<<24) +\n         (this[start+1]<<16) +\n         (this[start+2]<<8) +\n         this[start+3];\n}\n\nfunction fastCopy(length, srcBuffer, dstBuffer, dstOffset) {\n  switch (length) {\n    default: srcBuffer.copy(dstBuffer, dstOffset, 0, length); break;\n    case 16: dstBuffer[dstOffset+15] = srcBuffer[15];\n    case 15: dstBuffer[dstOffset+14] = srcBuffer[14];\n    case 14: dstBuffer[dstOffset+13] = srcBuffer[13];\n    case 13: dstBuffer[dstOffset+12] = srcBuffer[12];\n    case 12: dstBuffer[dstOffset+11] = srcBuffer[11];\n    case 11: dstBuffer[dstOffset+10] = srcBuffer[10];\n    case 10: dstBuffer[dstOffset+9] = srcBuffer[9];\n    case 9: dstBuffer[dstOffset+8] = srcBuffer[8];\n    case 8: dstBuffer[dstOffset+7] = srcBuffer[7];\n    case 7: dstBuffer[dstOffset+6] = srcBuffer[6];\n    case 6: dstBuffer[dstOffset+5] = srcBuffer[5];\n    case 5: dstBuffer[dstOffset+4] = srcBuffer[4];\n    case 4: dstBuffer[dstOffset+3] = srcBuffer[3];\n    case 3: dstBuffer[dstOffset+2] = srcBuffer[2];\n    case 2: dstBuffer[dstOffset+1] = srcBuffer[1];\n    case 1: dstBuffer[dstOffset] = srcBuffer[0];\n  }\n}\n\nfunction clone(obj) {\n  var cloned = {};\n  for (var k in obj) {\n    if (obj.hasOwnProperty(k)) {\n      cloned[k] = obj[k];\n    }\n  }\n  return cloned;\n}\n\n/**\n * Opcode handlers\n */\n\nvar opcodes = {\n  // text\n  '1': {\n    start: function(data) {\n      var self = this;\n      // decode length\n      var firstLength = data[1] & 0x7f;\n      if (firstLength < 126) {\n        if (self.maxPayloadExceeded(firstLength)){\n          self.error('Maximumpayload exceeded in compressed text message. Aborting...', 1009);\n          return;\n        }\n        opcodes['1'].getData.call(self, firstLength);\n      }\n      else if (firstLength == 126) {\n        self.expectHeader(2, function(data) {\n          var length = readUInt16BE.call(data, 0);\n          if (self.maxPayloadExceeded(length)){\n            self.error('Maximumpayload exceeded in compressed text message. Aborting...', 1009);\n            return;\n          }\n          opcodes['1'].getData.call(self, length);\n        });\n      }\n      else if (firstLength == 127) {\n        self.expectHeader(8, function(data) {\n          if (readUInt32BE.call(data, 0) != 0) {\n            self.error('packets with length spanning more than 32 bit is currently not supported', 1008);\n            return;\n          }\n          var length = readUInt32BE.call(data, 4);\n          if (self.maxPayloadExceeded(length)){\n            self.error('Maximumpayload exceeded in compressed text message. Aborting...', 1009);\n            return;\n          }\n          opcodes['1'].getData.call(self, readUInt32BE.call(data, 4));\n        });\n      }\n    },\n    getData: function(length) {\n      var self = this;\n      if (self.state.masked) {\n        self.expectHeader(4, function(data) {\n          var mask = data;\n          self.expectData(length, function(data) {\n            opcodes['1'].finish.call(self, mask, data);\n          });\n        });\n      }\n      else {\n        self.expectData(length, function(data) {\n          opcodes['1'].finish.call(self, null, data);\n        });\n      }\n    },\n    finish: function(mask, data) {\n      var self = this;\n      var packet = this.unmask(mask, data, true) || new Buffer(0);\n      var state = clone(this.state);\n      this.messageHandlers.push(function(callback) {\n        self.applyExtensions(packet, state.lastFragment, state.compressed, function(err, buffer) {\n          if (err) {\n            if(err.type===1009){\n                return self.error('Maximumpayload exceeded in compressed text message. Aborting...', 1009);\n            }\n            return self.error(err.message, 1007);\n          }\n          if (buffer != null) {\n            if( self.maxPayload==0 || (self.maxPayload > 0 && (self.currentMessageLength + buffer.length) < self.maxPayload) ){\n              self.currentMessage.push(buffer);\n            }\n            else{\n                self.currentMessage=null;\n                self.currentMessage = [];\n                self.currentMessageLength = 0;\n                self.error(new Error('Maximum payload exceeded. maxPayload: '+self.maxPayload), 1009);\n                return;\n            }\n            self.currentMessageLength += buffer.length;\n          }\n          if (state.lastFragment) {\n            var messageBuffer = Buffer.concat(self.currentMessage);\n            self.currentMessage = [];\n            self.currentMessageLength = 0;\n            if (!isValidUTF8(messageBuffer)) {\n              self.error('invalid utf8 sequence', 1007);\n              return;\n            }\n            self.ontext(messageBuffer.toString('utf8'), {masked: state.masked, buffer: messageBuffer});\n          }\n          callback();\n        });\n      });\n      this.flush();\n      this.endPacket();\n    }\n  },\n  // binary\n  '2': {\n    start: function(data) {\n      var self = this;\n      // decode length\n      var firstLength = data[1] & 0x7f;\n      if (firstLength < 126) {\n          if (self.maxPayloadExceeded(firstLength)){\n            self.error('Max payload exceeded in compressed text message. Aborting...', 1009);\n            return;\n          }\n        opcodes['2'].getData.call(self, firstLength);\n      }\n      else if (firstLength == 126) {\n        self.expectHeader(2, function(data) {\n          var length = readUInt16BE.call(data, 0);\n          if (self.maxPayloadExceeded(length)){\n            self.error('Max payload exceeded in compressed text message. Aborting...', 1009);\n            return;\n          }\n          opcodes['2'].getData.call(self, length);\n        });\n      }\n      else if (firstLength == 127) {\n        self.expectHeader(8, function(data) {\n          if (readUInt32BE.call(data, 0) != 0) {\n            self.error('packets with length spanning more than 32 bit is currently not supported', 1008);\n            return;\n          }\n          var length = readUInt32BE.call(data, 4, true);\n          if (self.maxPayloadExceeded(length)){\n            self.error('Max payload exceeded in compressed text message. Aborting...', 1009);\n            return;\n          }\n          opcodes['2'].getData.call(self, length);\n        });\n      }\n    },\n    getData: function(length) {\n      var self = this;\n      if (self.state.masked) {\n        self.expectHeader(4, function(data) {\n          var mask = data;\n          self.expectData(length, function(data) {\n            opcodes['2'].finish.call(self, mask, data);\n          });\n        });\n      }\n      else {\n        self.expectData(length, function(data) {\n          opcodes['2'].finish.call(self, null, data);\n        });\n      }\n    },\n    finish: function(mask, data) {\n      var self = this;\n      var packet = this.unmask(mask, data, true) || new Buffer(0);\n      var state = clone(this.state);\n      this.messageHandlers.push(function(callback) {\n        self.applyExtensions(packet, state.lastFragment, state.compressed, function(err, buffer) {\n          if (err) {\n            if(err.type===1009){\n                return self.error('Max payload exceeded in compressed binary message. Aborting...', 1009);\n            }\n            return self.error(err.message, 1007);\n          }\n          if (buffer != null) {\n            if( self.maxPayload==0 || (self.maxPayload > 0 && (self.currentMessageLength + buffer.length) < self.maxPayload) ){\n              self.currentMessage.push(buffer);\n            }\n            else{\n                self.currentMessage=null;\n                self.currentMessage = [];\n                self.currentMessageLength = 0;\n                self.error(new Error('Maximum payload exceeded'), 1009);\n                return;\n            }\n            self.currentMessageLength += buffer.length;\n          }\n          if (state.lastFragment) {\n            var messageBuffer = Buffer.concat(self.currentMessage);\n            self.currentMessage = [];\n            self.currentMessageLength = 0;\n            self.onbinary(messageBuffer, {masked: state.masked, buffer: messageBuffer});\n          }\n          callback();\n        });\n      });\n      this.flush();\n      this.endPacket();\n    }\n  },\n  // close\n  '8': {\n    start: function(data) {\n      var self = this;\n      if (self.state.lastFragment == false) {\n        self.error('fragmented close is not supported', 1002);\n        return;\n      }\n\n      // decode length\n      var firstLength = data[1] & 0x7f;\n      if (firstLength < 126) {\n        opcodes['8'].getData.call(self, firstLength);\n      }\n      else {\n        self.error('control frames cannot have more than 125 bytes of data', 1002);\n      }\n    },\n    getData: function(length) {\n      var self = this;\n      if (self.state.masked) {\n        self.expectHeader(4, function(data) {\n          var mask = data;\n          self.expectData(length, function(data) {\n            opcodes['8'].finish.call(self, mask, data);\n          });\n        });\n      }\n      else {\n        self.expectData(length, function(data) {\n          opcodes['8'].finish.call(self, null, data);\n        });\n      }\n    },\n    finish: function(mask, data) {\n      var self = this;\n      data = self.unmask(mask, data, true);\n\n      var state = clone(this.state);\n      this.messageHandlers.push(function() {\n        if (data && data.length == 1) {\n          self.error('close packets with data must be at least two bytes long', 1002);\n          return;\n        }\n        var code = data && data.length > 1 ? readUInt16BE.call(data, 0) : 1000;\n        if (!ErrorCodes.isValidErrorCode(code)) {\n          self.error('invalid error code', 1002);\n          return;\n        }\n        var message = '';\n        if (data && data.length > 2) {\n          var messageBuffer = data.slice(2);\n          if (!isValidUTF8(messageBuffer)) {\n            self.error('invalid utf8 sequence', 1007);\n            return;\n          }\n          message = messageBuffer.toString('utf8');\n        }\n        self.onclose(code, message, {masked: state.masked});\n        self.reset();\n      });\n      this.flush();\n    },\n  },\n  // ping\n  '9': {\n    start: function(data) {\n      var self = this;\n      if (self.state.lastFragment == false) {\n        self.error('fragmented ping is not supported', 1002);\n        return;\n      }\n\n      // decode length\n      var firstLength = data[1] & 0x7f;\n      if (firstLength < 126) {\n        opcodes['9'].getData.call(self, firstLength);\n      }\n      else {\n        self.error('control frames cannot have more than 125 bytes of data', 1002);\n      }\n    },\n    getData: function(length) {\n      var self = this;\n      if (self.state.masked) {\n        self.expectHeader(4, function(data) {\n          var mask = data;\n          self.expectData(length, function(data) {\n            opcodes['9'].finish.call(self, mask, data);\n          });\n        });\n      }\n      else {\n        self.expectData(length, function(data) {\n          opcodes['9'].finish.call(self, null, data);\n        });\n      }\n    },\n    finish: function(mask, data) {\n      var self = this;\n      data = this.unmask(mask, data, true);\n      var state = clone(this.state);\n      this.messageHandlers.push(function(callback) {\n        self.onping(data, {masked: state.masked, binary: true});\n        callback();\n      });\n      this.flush();\n      this.endPacket();\n    }\n  },\n  // pong\n  '10': {\n    start: function(data) {\n      var self = this;\n      if (self.state.lastFragment == false) {\n        self.error('fragmented pong is not supported', 1002);\n        return;\n      }\n\n      // decode length\n      var firstLength = data[1] & 0x7f;\n      if (firstLength < 126) {\n        opcodes['10'].getData.call(self, firstLength);\n      }\n      else {\n        self.error('control frames cannot have more than 125 bytes of data', 1002);\n      }\n    },\n    getData: function(length) {\n      var self = this;\n      if (this.state.masked) {\n        this.expectHeader(4, function(data) {\n          var mask = data;\n          self.expectData(length, function(data) {\n            opcodes['10'].finish.call(self, mask, data);\n          });\n        });\n      }\n      else {\n        this.expectData(length, function(data) {\n          opcodes['10'].finish.call(self, null, data);\n        });\n      }\n    },\n    finish: function(mask, data) {\n      var self = this;\n      data = self.unmask(mask, data, true);\n      var state = clone(this.state);\n      this.messageHandlers.push(function(callback) {\n        self.onpong(data, {masked: state.masked, binary: true});\n        callback();\n      });\n      this.flush();\n      this.endPacket();\n    }\n  }\n}\n"},"lineCount":795}},"hash":"86dca9b1a2797ebcf4cb72321157c470","cacheData":{"env":{}}}